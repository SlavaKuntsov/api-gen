@page
@model ApiGen.Web.Pages.Routes.IndexModel
@{
    ViewData["Title"] = "Routes";
}

<h1 class="mb-4">Routes</h1>
<div class="row">
    <div class="col-md-3 mb-4">
        <h2 class="h6">Existing Controllers</h2>
        <ul class="list-group small">
            @foreach (var c in Model.Controllers)
            {
                <li class="list-group-item">
                    <div class="fw-bold">@c.Controller</div>
                    <div class="text-muted">@c.Prefix</div>
                    <ul class="mb-0">
                        @foreach (var a in c.Actions)
                        {
                            <li><span class="badge bg-secondary">@a.Http</span> <code>@a.Template</code></li>
                        }
                    </ul>
                </li>
            }
        </ul>
    </div>
    <div class="col-md-9">
        <div class="row">
            <div class="col-md-6">
                <h2 class="h5">New Endpoint</h2>
                <form id="endpoint-form">
                    <div class="mb-2">
                        <label class="form-label">Controller</label>
                        <input asp-for="ControllerName" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Prefix</label>
                        <input asp-for="Prefix" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">HTTP</label>
                        <input asp-for="Http" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Route</label>
                        <input asp-for="RouteTemplate" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Method</label>
                        <input asp-for="MethodName" class="form-control" />
                    </div>
                    <div id="params">
                        <div class="mb-2 param-row">
                            <label class="form-label">Parameter</label>
                            <div class="input-group">
                                <input class="form-control" placeholder="Type" />
                                <input class="form-control" placeholder="Name" />
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-sm btn-secondary mb-2" id="add-param">Add Parameter</button>
                    <div class="mb-2">
                        <label class="form-label">Return Type</label>
                        <input asp-for="ReturnType" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Target File</label>
                        <input asp-for="TargetFileRelative" class="form-control" />
                    </div>
                    <button type="button" class="btn btn-primary" id="preview-btn">Preview</button>
                    <button type="button" class="btn btn-success ms-2" id="apply-btn" disabled>Apply</button>
                </form>
            </div>
            <div class="col-md-6">
                <h2 class="h5">Diff</h2>
                <pre id="diff" class="diff"></pre>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.getElementById('add-param').addEventListener('click', function () {
        var container = document.getElementById('params');
        var index = container.querySelectorAll('.param-row').length;
        var div = document.createElement('div');
        div.className = 'mb-2 param-row';
        div.innerHTML = '<div class="input-group">' +
            '<input class="form-control" placeholder="Type" />' +
            '<input class="form-control" placeholder="Name" />' +
            '</div>';
        container.appendChild(div);
    });

    function collectForm() {
        var form = document.getElementById('endpoint-form');
        var paramRows = form.querySelectorAll('.param-row');
        var parameters = [];
        paramRows.forEach(function(row){
            var inputs = row.querySelectorAll('input');
            var type = inputs[0].value.trim();
            var name = inputs[1].value.trim();
            if(type && name) parameters.push({ type: type, name: name });
        });
        var target = form.TargetFileRelative.value.trim();
        if(!target && form.ControllerName.value.trim()){
            target = 'Api/Generated/' + form.ControllerName.value.trim() + '.cs';
            form.TargetFileRelative.value = target;
        }
        return {
            controllerName: form.ControllerName.value,
            prefix: form.Prefix.value,
            http: form.Http.value,
            routeTemplate: form.RouteTemplate.value,
            methodName: form.MethodName.value,
            parameters: parameters,
            returnType: form.ReturnType.value,
            targetFileRelative: target
        };
    }

    document.getElementById('preview-btn').addEventListener('click', async function(){
        var data = collectForm();
        var resp = await fetch('/gen/preview', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });
        var json = await resp.json();
        document.getElementById('diff').textContent = json.diff;
        document.getElementById('apply-btn').disabled = false;
    });

    document.getElementById('apply-btn').addEventListener('click', async function(){
        var data = collectForm();
        await fetch('/gen/apply', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });
        location.reload();
    });
</script>
}
